def calculate_average_oxygen(oxygen_levels):
    avg_oxygens = []
    
    # Calculate average oxygen level for each trainee
    for i in range(3):
        avg = sum(oxygen_levels[i]) / 3.0
        avg_oxygens.append(round(avg))
    
    return avg_oxygens

def validate_oxygen_levels(oxygen_levels):
    # Check if all oxygen levels are within the valid range (1 to 100)
    for level in oxygen_levels:
        if level < 1 or level > 100:
            return False
    return True

def main():
    oxygen_levels = []
    for i in range(9):
        try:
            oxygen = int(input())
        except ValueError:
            print("INVALID INPUT")
            return
        
        if oxygen < 1 or oxygen > 100:
            print("INVALID INPUT")
            return
        oxygen_levels.append(oxygen)
    
    # Structure input into rounds for 3 trainees
    trainee_oxygen_levels = [
        [oxygen_levels[0], oxygen_levels[3], oxygen_levels[6]],  # Trainee 1
        [oxygen_levels[1], oxygen_levels[4], oxygen_levels[7]],  # Trainee 2
        [oxygen_levels[2], oxygen_levels[5], oxygen_levels[8]]   # Trainee 3
    ]
    
    avg_oxygen_levels = calculate_average_oxygen(trainee_oxygen_levels)

    # Check if all trainees are unfit
    if max(avg_oxygen_levels) < 70:
        print("All trainees are unfit")
        return
    
    # Find the maximum average oxygen level
    max_avg = max(avg_oxygen_levels)

    # Output the trainees with the highest average oxygen levels
    for i in range(3):
        if avg_oxygen_levels[i] == max_avg:
            print(f"Trainee Number : {i + 1}")

# Run the main function
main()
